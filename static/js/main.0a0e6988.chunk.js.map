{"version":3,"sources":["firebase.js","styles.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","modal","position","width","height","backgroundColor","palette","background","paper","border","boxShadow","shadows","padding","spacing","liText","fontWeight","textTransform","updateB","delete","cursor","margin","bottom","Todo","text","rand","Math","round","random","classes","useState","top","left","transform","modalStyle","open","setOpen","input","setInput","List","Modal","style","className","align","onClose","e","placeholder","todo","type","value","onChange","target","Button","disabled","variant","onClick","collection","doc","id","set","merge","ListItem","ListItemText","primary","Typography","App","todos","setTodos","query","setQuery","console","log","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","FormHelperText","event","preventDefault","add","timestamp","FieldValue","serverTimestamp","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a0e6988.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyBu7nXD9ZI_66da3ssvwAdYMDMDYzMFv1g\",\r\n  authDomain: \"todo-app-6055a.firebaseapp.com\",\r\n  projectId: \"todo-app-6055a\",\r\n  storageBucket: \"todo-app-6055a.appspot.com\",\r\n  messagingSenderId: \"617969900641\",\r\n  appId: \"1:617969900641:web:6c732e52fc268fe3ec5e20\",\r\n  measurementId: \"G-HRCM04623Q\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// getModalStyle is not a pure function, we roll the style only on the first render\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    position: \"absolute\",\r\n    width: 300,\r\n    height: 100,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  liText: {\r\n    fontWeight: \"bold\",\r\n    textTransform: \"capitalize\",\r\n  },\r\n  updateB: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  delete: {\r\n    cursor: \"pointer\",\r\n    margin: \"0\",\r\n    position: \"absolute\",\r\n    bottom: \"15%\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Button,\r\n  Modal,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport db from \"./firebase\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction Todo({ text }) {\r\n  function rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n  }\r\n\r\n  function getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const onUpdate = () => {\r\n    db.collection(\"todos\").doc(text.id).set(\r\n      {\r\n        todo: input,\r\n      },\r\n      { merge: true }\r\n    );\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <List>\r\n      <Modal\r\n        style={modalStyle}\r\n        className={classes.modal}\r\n        align='center'\r\n        open={open}\r\n        onClose={(e) => setOpen(false)}\r\n        aria-labelledby='simple-modal-title'\r\n        aria-describedby='simple-modal-description'>\r\n        <div>\r\n          <input\r\n            placeholder={text.todo}\r\n            type='text'\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n          <Button\r\n            disabled={!input}\r\n            className={classes.updateB}\r\n            variant='contained'\r\n            onClick={onUpdate}>\r\n            Update\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n\r\n      <ListItem align='center'>\r\n        <ListItemText\r\n          className={classes.liText}\r\n          align='center'\r\n          primary={<Typography variant='h6'>{text.todo}</Typography>}\r\n        />\r\n      </ListItem>\r\n      <Button onClick={(e) => setOpen(true)}>Edits</Button>\r\n      <DeleteForeverIcon\r\n        align='center'\r\n        className={classes.delete}\r\n        onClick={() => db.collection(\"todos\").doc(text.id).delete()}>\r\n        Delete\r\n      </DeleteForeverIcon>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Button,\n  FormControl,\n  Input,\n  FormHelperText,\n  InputLabel,\n} from \"@material-ui/core\";\nimport Todo from \"./Todo\";\nimport firebase from \"firebase\";\nimport db from \"./firebase\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  console.log(query);\n  console.log(todos);\n\n  useEffect(() => {\n    db.collection(\"todos\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setTodos(\n          snapshot.docs.map((doc) => ({ id: doc.id, todo: doc.data().todo }))\n        );\n      });\n  }, []);\n\n  const onClick = (event) => {\n    event.preventDefault();\n\n    db.collection(\"todos\").add({\n      todo: query,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n\n    setTodos([...todos, query]);\n    setQuery(\"\");\n  };\n\n  return (\n    <div className='App'>\n      <form>\n        <FormControl>\n          <InputLabel>Enter task here</InputLabel>\n          <Input\n            type='text'\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n          />\n          <FormHelperText> </FormHelperText>\n        </FormControl>\n        <Button\n          disabled={!query}\n          type='submit'\n          onClick={onClick}\n          variant='contained'\n          color='primary'>\n          Add Todo\n        </Button>\n      </form>\n\n      <ul>\n        {todos.map((todo) => (\n          <Todo text={todo} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}